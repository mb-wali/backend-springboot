create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint, primary key (id));
create table g_services (id bigserial not null, name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint, primary key (id));
create table g_services (id bigserial not null, name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint, primary key (id));
create table g_services (id bigserial not null, name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint, primary key (id));
create table g_services (id bigserial not null, name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint, primary key (id));
create table g_services (id bigserial not null, name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint, primary key (id));
create table g_services (id bigserial not null, name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint, primary key (id));
create table g_services (id bigserial not null, name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint, primary key (id));
create table g_services (id bigserial not null, name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint, primary key (id));
create table g_services (id bigserial not null, name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint, primary key (id));
create table g_services (id bigserial not null, name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint, primary key (id));
create table g_services (id bigserial not null, name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
create sequence accounts_seq start with 1 increment by 50;
create table accounts (id bigint not null, name varchar(100) not null, email_address varchar(255), primary key (id));
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
create sequence accounts_seq start with 1 increment by 50;
create table accounts (id bigint not null, name varchar(100) not null, email_address varchar(255), primary key (id));
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
create sequence accounts_seq start with 1 increment by 50;
create table accounts (id bigint not null, name varchar(100) not null, email_address varchar(255), primary key (id));
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
create sequence accounts_seq start with 1 increment by 50;
create table accounts (id bigint not null, name varchar(100) not null, email_address varchar(255), primary key (id));
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
create sequence accounts_seq start with 1 increment by 50;
create table accounts (id bigint not null, name varchar(100) not null, email_address varchar(255), primary key (id));
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
create sequence accounts_seq start with 1 increment by 50;
create table accounts (id bigint not null, name varchar(100) not null, email_address varchar(255), primary key (id));
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
create sequence accounts_seq start with 1 increment by 50;
create table accounts (id bigint not null, name varchar(100) not null, email_address varchar(255), primary key (id));
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
create sequence accounts_seq start with 1 increment by 50;
create table accounts (id bigint not null, name varchar(100) not null, email_address varchar(255), primary key (id));
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
create sequence accounts_seq start with 1 increment by 50;
create table accounts (id bigint not null, name varchar(100) not null, email_address varchar(255), primary key (id));
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
create sequence accounts_seq start with 1 increment by 50;
create table accounts (id bigint not null, name varchar(100) not null, email_address varchar(255), primary key (id));
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint, primary key (id));
create table users (id bigserial not null, test bigint, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint, primary key (id));
create table users (id bigserial not null, test bigint, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint unique, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint unique, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists customers add constraint FKrh1g1a20omjmn6kurd35o3eit foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
alter table if exists service_providers add constraint FK8b8mme5feiiglgjkw0fin13iu foreign key (user_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint unique, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint unique, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists customers add constraint FKrh1g1a20omjmn6kurd35o3eit foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
alter table if exists service_providers add constraint FK8b8mme5feiiglgjkw0fin13iu foreign key (user_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint unique, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint unique, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists customers add constraint FKrh1g1a20omjmn6kurd35o3eit foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
alter table if exists service_providers add constraint FK8b8mme5feiiglgjkw0fin13iu foreign key (user_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint unique, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint unique, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists customers add constraint FKrh1g1a20omjmn6kurd35o3eit foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
alter table if exists service_providers add constraint FK8b8mme5feiiglgjkw0fin13iu foreign key (user_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint unique, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint unique, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists customers add constraint FKrh1g1a20omjmn6kurd35o3eit foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
alter table if exists service_providers add constraint FK8b8mme5feiiglgjkw0fin13iu foreign key (user_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint unique, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint unique, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists customers add constraint FKrh1g1a20omjmn6kurd35o3eit foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
alter table if exists service_providers add constraint FK8b8mme5feiiglgjkw0fin13iu foreign key (user_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint unique, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint unique, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists customers add constraint FKrh1g1a20omjmn6kurd35o3eit foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
alter table if exists service_providers add constraint FK8b8mme5feiiglgjkw0fin13iu foreign key (user_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint unique, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint unique, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists customers add constraint FKrh1g1a20omjmn6kurd35o3eit foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
alter table if exists service_providers add constraint FK8b8mme5feiiglgjkw0fin13iu foreign key (user_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint unique, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint unique, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists customers add constraint FKrh1g1a20omjmn6kurd35o3eit foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
alter table if exists service_providers add constraint FK8b8mme5feiiglgjkw0fin13iu foreign key (user_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint unique, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint unique, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists customers add constraint FKrh1g1a20omjmn6kurd35o3eit foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
alter table if exists service_providers add constraint FK8b8mme5feiiglgjkw0fin13iu foreign key (user_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint unique, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint unique, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists customers add constraint FKrh1g1a20omjmn6kurd35o3eit foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
alter table if exists service_providers add constraint FK8b8mme5feiiglgjkw0fin13iu foreign key (user_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint unique, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint unique, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists customers add constraint FKrh1g1a20omjmn6kurd35o3eit foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
alter table if exists service_providers add constraint FK8b8mme5feiiglgjkw0fin13iu foreign key (user_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint unique, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint unique, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists customers add constraint FKrh1g1a20omjmn6kurd35o3eit foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
alter table if exists service_providers add constraint FK8b8mme5feiiglgjkw0fin13iu foreign key (user_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint unique, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint unique, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists customers add constraint FKrh1g1a20omjmn6kurd35o3eit foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
alter table if exists service_providers add constraint FK8b8mme5feiiglgjkw0fin13iu foreign key (user_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint unique, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint unique, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists customers add constraint FKrh1g1a20omjmn6kurd35o3eit foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
alter table if exists service_providers add constraint FK8b8mme5feiiglgjkw0fin13iu foreign key (user_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint unique, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint unique, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255) unique, first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists customers add constraint FKrh1g1a20omjmn6kurd35o3eit foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
alter table if exists service_providers add constraint FK8b8mme5feiiglgjkw0fin13iu foreign key (user_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint unique, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint unique, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255) unique, first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists customers add constraint FKrh1g1a20omjmn6kurd35o3eit foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
alter table if exists service_providers add constraint FK8b8mme5feiiglgjkw0fin13iu foreign key (user_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint unique, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint unique, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255) unique, first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists customers add constraint FKrh1g1a20omjmn6kurd35o3eit foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
alter table if exists service_providers add constraint FK8b8mme5feiiglgjkw0fin13iu foreign key (user_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint unique, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint unique, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255) unique, first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists customers add constraint FKrh1g1a20omjmn6kurd35o3eit foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
alter table if exists service_providers add constraint FK8b8mme5feiiglgjkw0fin13iu foreign key (user_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint unique, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint unique, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255) unique, first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists customers add constraint FKrh1g1a20omjmn6kurd35o3eit foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
alter table if exists service_providers add constraint FK8b8mme5feiiglgjkw0fin13iu foreign key (user_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint unique, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint unique, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255) unique, first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists customers add constraint FKrh1g1a20omjmn6kurd35o3eit foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
alter table if exists service_providers add constraint FK8b8mme5feiiglgjkw0fin13iu foreign key (user_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint unique, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint unique, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255) unique, first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists customers add constraint FKrh1g1a20omjmn6kurd35o3eit foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
alter table if exists service_providers add constraint FK8b8mme5feiiglgjkw0fin13iu foreign key (user_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint unique, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint unique, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255) unique, first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists customers add constraint FKrh1g1a20omjmn6kurd35o3eit foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
alter table if exists service_providers add constraint FK8b8mme5feiiglgjkw0fin13iu foreign key (user_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint unique, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint unique, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255) unique, first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists customers add constraint FKrh1g1a20omjmn6kurd35o3eit foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
alter table if exists service_providers add constraint FK8b8mme5feiiglgjkw0fin13iu foreign key (user_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint unique, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint unique, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255) unique, first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists customers add constraint FKrh1g1a20omjmn6kurd35o3eit foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
alter table if exists service_providers add constraint FK8b8mme5feiiglgjkw0fin13iu foreign key (user_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint unique, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint unique, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255) unique, first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists customers add constraint FKrh1g1a20omjmn6kurd35o3eit foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
alter table if exists service_providers add constraint FK8b8mme5feiiglgjkw0fin13iu foreign key (user_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint unique, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint unique, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255) unique, first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists customers add constraint FKrh1g1a20omjmn6kurd35o3eit foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
alter table if exists service_providers add constraint FK8b8mme5feiiglgjkw0fin13iu foreign key (user_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint unique, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint unique, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255) unique, first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists customers add constraint FKrh1g1a20omjmn6kurd35o3eit foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
alter table if exists service_providers add constraint FK8b8mme5feiiglgjkw0fin13iu foreign key (user_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint unique, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint unique, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255) unique, first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists customers add constraint FKrh1g1a20omjmn6kurd35o3eit foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
alter table if exists service_providers add constraint FK8b8mme5feiiglgjkw0fin13iu foreign key (user_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint unique, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint unique, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255) unique, first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists customers add constraint FKrh1g1a20omjmn6kurd35o3eit foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
alter table if exists service_providers add constraint FK8b8mme5feiiglgjkw0fin13iu foreign key (user_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint unique, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint unique, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255) unique, first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists customers add constraint FKrh1g1a20omjmn6kurd35o3eit foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
alter table if exists service_providers add constraint FK8b8mme5feiiglgjkw0fin13iu foreign key (user_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint unique, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint unique, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255) unique, first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists customers add constraint FKrh1g1a20omjmn6kurd35o3eit foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
alter table if exists service_providers add constraint FK8b8mme5feiiglgjkw0fin13iu foreign key (user_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint unique, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint unique, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255) unique, first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists customers add constraint FKrh1g1a20omjmn6kurd35o3eit foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
alter table if exists service_providers add constraint FK8b8mme5feiiglgjkw0fin13iu foreign key (user_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint unique, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint unique, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255) unique, first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists customers add constraint FKrh1g1a20omjmn6kurd35o3eit foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
alter table if exists service_providers add constraint FK8b8mme5feiiglgjkw0fin13iu foreign key (user_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint unique, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint unique, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255) unique, first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists customers add constraint FKrh1g1a20omjmn6kurd35o3eit foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
alter table if exists service_providers add constraint FK8b8mme5feiiglgjkw0fin13iu foreign key (user_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint unique, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint unique, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255) unique, first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists customers add constraint FKrh1g1a20omjmn6kurd35o3eit foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
alter table if exists service_providers add constraint FK8b8mme5feiiglgjkw0fin13iu foreign key (user_id) references users;
create table address (id bigserial not null, user_id bigint, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint unique, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint unique, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255) unique, first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists customers add constraint FKrh1g1a20omjmn6kurd35o3eit foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
alter table if exists service_providers add constraint FK8b8mme5feiiglgjkw0fin13iu foreign key (user_id) references users;
create table address (id bigserial not null, user_id bigint not null, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint unique, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint unique, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255) unique, first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists customers add constraint FKrh1g1a20omjmn6kurd35o3eit foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
alter table if exists service_providers add constraint FK8b8mme5feiiglgjkw0fin13iu foreign key (user_id) references users;
create table address (id bigserial not null, user_id bigint not null, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint unique, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint unique, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255) unique, first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists customers add constraint FKrh1g1a20omjmn6kurd35o3eit foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
alter table if exists service_providers add constraint FK8b8mme5feiiglgjkw0fin13iu foreign key (user_id) references users;
create table address (id bigserial not null, user_id bigint not null, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint unique, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint not null, service_provider_id bigint, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint unique, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255) unique, first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists customers add constraint FKrh1g1a20omjmn6kurd35o3eit foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
alter table if exists service_providers add constraint FK8b8mme5feiiglgjkw0fin13iu foreign key (user_id) references users;
create table address (id bigserial not null, user_id bigint not null, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint unique, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint not null, service_provider_id bigint not null, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint unique, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255) unique, first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists customers add constraint FKrh1g1a20omjmn6kurd35o3eit foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
alter table if exists service_providers add constraint FK8b8mme5feiiglgjkw0fin13iu foreign key (user_id) references users;
create table address (id bigserial not null, user_id bigint not null, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint unique, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint not null, service_provider_id bigint not null, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint unique, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255) unique, first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists customers add constraint FKrh1g1a20omjmn6kurd35o3eit foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
alter table if exists service_providers add constraint FK8b8mme5feiiglgjkw0fin13iu foreign key (user_id) references users;
create table address (id bigserial not null, user_id bigint not null, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint unique, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint not null, service_provider_id bigint not null, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint unique, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255) unique, first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists customers add constraint FKrh1g1a20omjmn6kurd35o3eit foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
alter table if exists service_providers add constraint FK8b8mme5feiiglgjkw0fin13iu foreign key (user_id) references users;
create table address (id bigserial not null, user_id bigint not null, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint unique, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint not null, service_provider_id bigint not null, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint unique, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255) unique, first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists customers add constraint FKrh1g1a20omjmn6kurd35o3eit foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
alter table if exists service_providers add constraint FK8b8mme5feiiglgjkw0fin13iu foreign key (user_id) references users;
create table address (id bigserial not null, user_id bigint not null, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint unique, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint not null, service_provider_id bigint not null, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint unique, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255) unique, first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists customers add constraint FKrh1g1a20omjmn6kurd35o3eit foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
alter table if exists service_providers add constraint FK8b8mme5feiiglgjkw0fin13iu foreign key (user_id) references users;
create table address (id bigserial not null, user_id bigint not null, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint unique, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint not null, service_provider_id bigint not null, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint unique, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255) unique, first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists customers add constraint FKrh1g1a20omjmn6kurd35o3eit foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
alter table if exists service_providers add constraint FK8b8mme5feiiglgjkw0fin13iu foreign key (user_id) references users;
create table address (id bigserial not null, user_id bigint not null, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint unique, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint not null, service_provider_id bigint not null, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint unique, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255) unique, first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists customers add constraint FKrh1g1a20omjmn6kurd35o3eit foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
alter table if exists service_providers add constraint FK8b8mme5feiiglgjkw0fin13iu foreign key (user_id) references users;
create table address (id bigserial not null, user_id bigint not null, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint unique, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint not null, service_provider_id bigint not null, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint unique, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255) unique, first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists customers add constraint FKrh1g1a20omjmn6kurd35o3eit foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
alter table if exists service_providers add constraint FK8b8mme5feiiglgjkw0fin13iu foreign key (user_id) references users;
create table address (id bigserial not null, user_id bigint not null, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint unique, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint not null, service_provider_id bigint not null, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint unique, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255) unique, first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists customers add constraint FKrh1g1a20omjmn6kurd35o3eit foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
alter table if exists service_providers add constraint FK8b8mme5feiiglgjkw0fin13iu foreign key (user_id) references users;
create table address (id bigserial not null, user_id bigint not null, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint unique, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint not null, service_provider_id bigint not null, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint unique, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255) unique, first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists customers add constraint FKrh1g1a20omjmn6kurd35o3eit foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
alter table if exists service_providers add constraint FK8b8mme5feiiglgjkw0fin13iu foreign key (user_id) references users;
create table address (id bigserial not null, user_id bigint not null, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint unique, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint not null, service_provider_id bigint not null, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint unique, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255) unique, first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists customers add constraint FKrh1g1a20omjmn6kurd35o3eit foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
alter table if exists service_providers add constraint FK8b8mme5feiiglgjkw0fin13iu foreign key (user_id) references users;
create table address (id bigserial not null, user_id bigint not null, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint unique, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint not null, service_provider_id bigint not null, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint unique, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255) unique, first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists customers add constraint FKrh1g1a20omjmn6kurd35o3eit foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
alter table if exists service_providers add constraint FK8b8mme5feiiglgjkw0fin13iu foreign key (user_id) references users;
create table address (id bigserial not null, user_id bigint not null, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint unique, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint not null, service_provider_id bigint not null, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint unique, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255) unique, first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists customers add constraint FKrh1g1a20omjmn6kurd35o3eit foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
alter table if exists service_providers add constraint FK8b8mme5feiiglgjkw0fin13iu foreign key (user_id) references users;
create table address (id bigserial not null, user_id bigint not null, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint unique, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint not null, service_provider_id bigint not null, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint unique, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255) unique, first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists customers add constraint FKrh1g1a20omjmn6kurd35o3eit foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
alter table if exists service_providers add constraint FK8b8mme5feiiglgjkw0fin13iu foreign key (user_id) references users;
create table address (id bigserial not null, user_id bigint not null, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint unique, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint not null, service_provider_id bigint not null, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint unique, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255) unique, first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists customers add constraint FKrh1g1a20omjmn6kurd35o3eit foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
alter table if exists service_providers add constraint FK8b8mme5feiiglgjkw0fin13iu foreign key (user_id) references users;
create table address (id bigserial not null, user_id bigint not null, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint unique, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint not null, service_provider_id bigint not null, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint unique, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255) unique, first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists customers add constraint FKrh1g1a20omjmn6kurd35o3eit foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
alter table if exists service_providers add constraint FK8b8mme5feiiglgjkw0fin13iu foreign key (user_id) references users;
create table address (id bigserial not null, user_id bigint not null, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint unique, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint not null, service_provider_id bigint not null, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint unique, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255) unique, first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists customers add constraint FKrh1g1a20omjmn6kurd35o3eit foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
alter table if exists service_providers add constraint FK8b8mme5feiiglgjkw0fin13iu foreign key (user_id) references users;
create table address (id bigserial not null, user_id bigint not null, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint unique, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint not null, service_provider_id bigint not null, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint unique, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255) unique, first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists customers add constraint FKrh1g1a20omjmn6kurd35o3eit foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
alter table if exists service_providers add constraint FK8b8mme5feiiglgjkw0fin13iu foreign key (user_id) references users;
create table address (id bigserial not null, user_id bigint not null, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint unique, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint not null, service_provider_id bigint not null, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint unique, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255) unique, first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists customers add constraint FKrh1g1a20omjmn6kurd35o3eit foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
alter table if exists service_providers add constraint FK8b8mme5feiiglgjkw0fin13iu foreign key (user_id) references users;
create table address (id bigserial not null, user_id bigint not null, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint unique, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint not null, service_provider_id bigint not null, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint unique, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255) unique, first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists customers add constraint FKrh1g1a20omjmn6kurd35o3eit foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
alter table if exists service_providers add constraint FK8b8mme5feiiglgjkw0fin13iu foreign key (user_id) references users;
create table address (id bigserial not null, user_id bigint not null, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint unique, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint not null, service_provider_id bigint not null, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint unique, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255) unique, first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists customers add constraint FKrh1g1a20omjmn6kurd35o3eit foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
alter table if exists service_providers add constraint FK8b8mme5feiiglgjkw0fin13iu foreign key (user_id) references users;
create table address (id bigserial not null, user_id bigint not null, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint unique, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint not null, service_provider_id bigint not null, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint unique, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255) unique, first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists customers add constraint FKrh1g1a20omjmn6kurd35o3eit foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
alter table if exists service_providers add constraint FK8b8mme5feiiglgjkw0fin13iu foreign key (user_id) references users;
create table address (id bigserial not null, user_id bigint not null, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint unique, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint not null, service_provider_id bigint not null, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint unique, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255) unique, first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists customers add constraint FKrh1g1a20omjmn6kurd35o3eit foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
alter table if exists service_providers add constraint FK8b8mme5feiiglgjkw0fin13iu foreign key (user_id) references users;
create table address (id bigserial not null, user_id bigint not null, city varchar(255), country varchar(255), country_code varchar(255), haus_number varchar(255), latitude varchar(255), longitude varchar(255), plz varchar(255), street varchar(255), primary key (id));
create table customers (id bigserial not null, user_id bigint unique, primary key (id));
create table g_services (id bigserial not null, description varchar(255), name varchar(255), primary key (id));
create table m_services (id bigserial not null, service_id bigint not null, service_provider_id bigint not null, primary key (id));
create table reviews (value integer, customer bigint, id bigserial not null, reviewer_id bigint, service_provider bigint, comment varchar(255), primary key (id));
create table service_providers (id bigserial not null, user_id bigint unique, primary key (id));
create table users (id bigserial not null, type bigint, email varchar(255) unique, first_name varchar(255), last_name varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN')), primary key (id));
alter table if exists address add constraint FK6i66ijb8twgcqtetl8eeeed6v foreign key (user_id) references users;
alter table if exists customers add constraint FKrh1g1a20omjmn6kurd35o3eit foreign key (user_id) references users;
alter table if exists m_services add constraint FKjmj33d4pc25dddvo14kb5dewp foreign key (service_id) references g_services;
alter table if exists m_services add constraint FK5v325n0shu4n75q7557fhif0q foreign key (service_provider_id) references service_providers;
alter table if exists reviews add constraint FK97io3f8wg626gpyp76r6g9tjq foreign key (customer) references customers;
alter table if exists reviews add constraint FK6khr43ddbhwho2f2pyq8m3i8g foreign key (service_provider) references service_providers;
alter table if exists reviews add constraint FKd1isgfajhtdl8mgg29up6mofi foreign key (reviewer_id) references users;
alter table if exists service_providers add constraint FK8b8mme5feiiglgjkw0fin13iu foreign key (user_id) references users;
